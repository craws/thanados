{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../sourceES6/viewer/src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAC9D,OAAO,EAAE,iBAAiB,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAE3E,OAAO,EAAE,0BAA0B,EAAE,MAAM,mCAAmC,CAAC;AAC/E,OAAO,EAAE,uBAAuB,EAAE,MAAM,oBAAoB,CAAC;AAE7D;;;;GAIG;AAEH,OAAO,KAAK,OAAO,MAAM,iBAAiB,CAAC;AAE3C,uBAAuB;AACvB,OAAO,oBAAoB,CAAC;AAC5B,OAAO,OAAO,CAAC;AAEf,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAExD,+BAA+B;AAC/B,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;AAChC,aAAa,EAAE,CAAC;AAEhB,8CAA8C;AAC9C,IAAI,WAAW,GAAY,aAAa,CAAC,WAAW,CAAC;AAErD;;GAEG;AACH,SAAS,UAAU;IACf,aAAa,CAAC,OAAO,EAAE,CAAC;IACxB,aAAa,CAAC,OAAO,EAAE,CAAC;IACxB,gBAAgB,CAAC,OAAO,EAAE,CAAC;AAC/B,CAAC;AAED,IAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;AAEtC,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;AAEpD,gCAAgC;AAChC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAiB,0BAA0B,EAAE,uBAAuB,EAAE,CAAC;AAC1S,OAAO,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AAC3C,gDAAgD;AAChD,cAAc,iBAAiB,CAAC","sourcesContent":["import { mapperManager } from './configuration/mappers';\r\nimport { viewerGlobals } from './configuration/globals';\r\nimport { viewerManager } from './viewer/viewerManager';\r\nimport { DefaultViewer } from './viewer/defaultViewer';\r\nimport { AbstractViewer } from './viewer/viewer';\r\nimport { telemetryManager } from './managers/telemetryManager';\r\nimport { ModelLoader } from './loader/modelLoader';\r\nimport { ViewerModel, ModelState } from './model/viewerModel';\r\nimport { AnimationPlayMode, AnimationState } from './model/modelAnimation';\r\nimport { ILoaderPlugin } from './loader/plugins/loaderPlugin';\r\nimport { AbstractViewerNavbarButton } from './templating/viewerTemplatePlugin';\r\nimport { registerCustomOptimizer } from './optimizer/custom';\r\n\r\n/**\r\n * BabylonJS Viewer\r\n *\r\n * An HTML-Based viewer for 3D models, based on BabylonJS and its extensions.\r\n */\r\n\r\nimport * as BABYLON from '@babylonjs/core';\r\n\r\n// load needed modules.\r\nimport '@babylonjs/loaders';\r\nimport 'pepjs';\r\n\r\nimport { initListeners, InitTags } from './initializer';\r\n\r\n// promise polyfill, if needed!\r\nBABYLON.PromisePolyfill.Apply();\r\ninitListeners();\r\n\r\n//deprectaed, here for backwards compatibility\r\nlet disableInit: boolean = viewerGlobals.disableInit;\r\n\r\n/**\r\n * Dispose all viewers currently registered\r\n */\r\nfunction disposeAll() {\r\n    viewerManager.dispose();\r\n    mapperManager.dispose();\r\n    telemetryManager.dispose();\r\n}\r\n\r\nconst Version = viewerGlobals.version;\r\n\r\nconsole.log(\"Babylon.js viewer (v\" + Version + \")\");\r\n\r\n// public API for initialization\r\nexport { BABYLON, Version, InitTags, DefaultViewer, AbstractViewer, viewerGlobals, telemetryManager, disableInit, viewerManager, mapperManager, disposeAll, ModelLoader, ViewerModel, AnimationPlayMode, AnimationState, ModelState, ILoaderPlugin, AbstractViewerNavbarButton, registerCustomOptimizer };\r\nexport { GLTF2 } from '@babylonjs/loaders';\r\n// export publicliy all configuration interfaces\r\nexport * from './configuration';\r\n"]}