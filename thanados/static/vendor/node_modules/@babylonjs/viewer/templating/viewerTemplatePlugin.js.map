{"version":3,"file":"viewerTemplatePlugin.js","sourceRoot":"","sources":["../../../../sourceES6/viewer/src/templating/viewerTemplatePlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventCallback, Template } from \"./templateManager\";\r\nimport * as Handlebars from 'handlebars/dist/handlebars';\r\n\r\nexport interface IViewerTemplatePlugin {\r\n\r\n    readonly templateName: string;\r\n    readonly eventsToAttach?: Array<string>;\r\n\r\n    interactionPredicate(event: EventCallback): boolean;\r\n    onEvent?(event: EventCallback): void;\r\n    addHTMLTemplate?(template: Template): void;\r\n}\r\n\r\nexport abstract class AbstractViewerNavbarButton implements IViewerTemplatePlugin {\r\n\r\n    public readonly templateName: string = \"navBar\";\r\n    public readonly eventsToAttach: Array<string> = ['pointerdown'];\r\n    protected _prepend: boolean = true;\r\n    protected _buttonName: string;\r\n    protected _buttonClass: string;\r\n    protected _htmlTemplate: string;\r\n\r\n    constructor(buttonName: string, buttonClass?: string, htmlTemplate?: string) {\r\n        this._buttonName = buttonName;\r\n        if (buttonClass) {\r\n            this._buttonClass = buttonClass;\r\n        } else {\r\n            this._buttonClass = buttonName + '-button';\r\n        }\r\n        if (htmlTemplate) { this._htmlTemplate = htmlTemplate; }\r\n        else {\r\n            this._htmlTemplate = `\r\n<button class=\"${this._buttonClass}\">\r\n    <span class=\"icon ${this._buttonName}-icon\"></span>\r\n</button>\r\n`;\r\n        }\r\n    }\r\n\r\n    interactionPredicate(event: EventCallback): boolean {\r\n        let pointerDown = <PointerEvent>event.event;\r\n        if (pointerDown.button !== 0) { return false; }\r\n        var element = (<HTMLElement>event.event.target);\r\n\r\n        if (!element) {\r\n            return false;\r\n        }\r\n\r\n        let elementClasses = element.classList;\r\n\r\n        for (let i = 0; i < elementClasses.length; ++i) {\r\n            let className = elementClasses[i];\r\n            if (className.indexOf(this._buttonClass) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    abstract onEvent(event: EventCallback): void;\r\n\r\n    public addHTMLTemplate(template: Template): void {\r\n        let element = this._generateHTMLElement(template);\r\n        let container = template.parent.querySelector(\"div.default-control\");\r\n        if (container) {\r\n            if (this._prepend) {\r\n                container.insertBefore(element, container.firstChild);\r\n            } else {\r\n                container.appendChild(element);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _generateHTMLElement(template: Template): Element | DocumentFragment {\r\n        let compiledTemplate = Handlebars.compile(this._htmlTemplate, { noEscape: (template.configuration.params && !!template.configuration.params.noEscape) });\r\n        let config = template.configuration.params || {};\r\n        let rawHtml = compiledTemplate(config);\r\n        let fragment: Element | DocumentFragment;\r\n        try {\r\n            fragment = document.createRange().createContextualFragment(rawHtml);\r\n        } catch (e) {\r\n            let test = document.createElement(this._buttonClass);\r\n            test.innerHTML = rawHtml;\r\n            fragment = test;\r\n        }\r\n        return fragment;\r\n    }\r\n}"]}