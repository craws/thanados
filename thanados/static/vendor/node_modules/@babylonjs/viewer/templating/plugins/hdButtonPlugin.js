var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AbstractViewerNavbarButton } from "../viewerTemplatePlugin";
var HDButtonPlugin = /** @class */ (function (_super) {
    __extends(HDButtonPlugin, _super);
    function HDButtonPlugin(_viewer) {
        var _this = _super.call(this, "hd", "hd-button", HDButtonPlugin.HtmlTemplate) || this;
        _this._viewer = _viewer;
        return _this;
    }
    HDButtonPlugin.prototype.onEvent = function (event) {
        var button = event.template.parent.querySelector(".hd-button");
        if (button) {
            button.classList.contains("hd-toggled") ? button.classList.remove("hd-toggled") : button.classList.add("hd-toggled");
        }
        this._viewer.toggleHD();
    };
    HDButtonPlugin.HtmlTemplate = "\n{{#unless hideHd}}\n<style>\n.hd-icon:after {\n    font-size: 16px;\n    content: \"\\F765\";\n}\n\n.hd-toggled span.hd-icon:after {\n    content: \"\\F766\";\n}\n</style>\n<button class=\"hd-button\" title=\"{{text.hdButton}}\">\n     <span class=\"icon hd-icon\"></span>\n </button>\n {{/unless}}\n";
    return HDButtonPlugin;
}(AbstractViewerNavbarButton));
export { HDButtonPlugin };
//# sourceMappingURL=hdButtonPlugin.js.map