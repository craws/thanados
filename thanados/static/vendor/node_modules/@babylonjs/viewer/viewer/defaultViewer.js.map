{"version":3,"file":"defaultViewer.js","sourceRoot":"","sources":["../../../../sourceES6/viewer/src/viewer/defaultViewer.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { ViewerConfiguration, IModelConfiguration, ILightConfiguration, ISceneConfiguration } from './../configuration';\r\nimport { Template, EventCallback } from '../templating/templateManager';\r\nimport { FilesInput } from '@babylonjs/core/Misc/filesInput';\r\nimport { SpotLight } from '@babylonjs/core/Lights/spotLight';\r\nimport { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { TemplateManager } from '../templating/templateManager';\r\nimport { AbstractViewerWithTemplate } from './viewerWithTemplate';\r\nimport { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial';\r\nimport { PBRMaterial } from '@babylonjs/core/Materials/PBR/pbrMaterial';\r\nimport { extendClassWithConfig } from '../helper';\r\nimport { ViewerModel } from '../model/viewerModel';\r\nimport { IModelAnimation, AnimationState } from '../model/modelAnimation';\r\nimport { IViewerTemplatePlugin } from '../templating/viewerTemplatePlugin';\r\nimport { HDButtonPlugin } from '../templating/plugins/hdButtonPlugin';\r\nimport { PrintButtonPlugin } from '../templating/plugins/printButton';\r\n\r\n/**\r\n * The Default viewer is the default implementation of the AbstractViewer.\r\n * It uses the templating system to render a new canvas and controls.\r\n */\r\nexport class DefaultViewer extends AbstractViewerWithTemplate {\r\n    /**\r\n     * The corresponsing template manager of this viewer.\r\n     */\r\n    public templateManager: TemplateManager;\r\n\r\n    public fullscreenElement?: Element;\r\n\r\n    /**\r\n     * Create a new default viewer\r\n     * @param containerElement the element in which the templates will be rendered\r\n     * @param initialConfiguration the initial configuration. Defaults to extending the default configuration\r\n     */\r\n    constructor(public containerElement: Element, initialConfiguration: ViewerConfiguration = { extends: 'default' }) {\r\n        super(containerElement, initialConfiguration);\r\n        \r\n        this.onModelLoadedObservable.add(this._onModelLoaded);\r\n        this.onModelRemovedObservable.add(() => {\r\n            this._configureTemplate();\r\n        });\r\n\r\n        this.onEngineInitObservable.add(() => {\r\n            this.sceneManager.onLightsConfiguredObservable.add((data) => {\r\n                this._configureLights();\r\n            });\r\n        });\r\n\r\n        this.onInitDoneObservable.add(() => {\r\n            this.sceneManager.setDefaultMaterial = function(sceneConfig: ISceneConfiguration){\r\n                let conf = sceneConfig.defaultMaterial;\r\n                if(!conf){\r\n                    return;\r\n                }\r\n                if ((conf.materialType === 'standard' && this.scene.defaultMaterial.getClassName() !== 'StandardMaterial') ||\r\n                    (conf.materialType === 'pbr' && this.scene.defaultMaterial.getClassName() !== 'PBRMaterial')) {\r\n                    this.scene.defaultMaterial.dispose();\r\n                    if (conf.materialType === 'standard') {\r\n                        this.scene.defaultMaterial = new StandardMaterial(\"defaultMaterial\", this.scene);\r\n                    } else {\r\n                        this.scene.defaultMaterial = new PBRMaterial(\"defaultMaterial\", this.scene);\r\n                    }\r\n                }\r\n                extendClassWithConfig(this.scene.defaultMaterial, conf);\r\n            }\r\n            if (!this.sceneManager.models.length) {\r\n                this.hideLoadingScreen();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _registeredPlugins: Array<IViewerTemplatePlugin> = [];\r\n\r\n    public registerTemplatePlugin(plugin: IViewerTemplatePlugin) {\r\n        //validate\r\n        if (!plugin.templateName) {\r\n            throw new Error(\"No template name provided\");\r\n        }\r\n        this._registeredPlugins.push(plugin);\r\n        let template = this.templateManager.getTemplate(plugin.templateName);\r\n        if (!template) {\r\n            throw new Error(`Template ${plugin.templateName} not found`);\r\n        }\r\n        if (plugin.addHTMLTemplate) {\r\n            template.onHTMLRendered.add((tmpl) => {\r\n                plugin.addHTMLTemplate!(tmpl);\r\n            });\r\n            template.redraw();\r\n        }\r\n\r\n        if (plugin.eventsToAttach) {\r\n            plugin.eventsToAttach.forEach((eventName) => {\r\n                plugin.onEvent && this.templateManager.eventManager.registerCallback(plugin.templateName, (event) => {\r\n                    if (plugin.onEvent && plugin.interactionPredicate(event)) {\r\n                        plugin.onEvent(event);\r\n                    }\r\n                }, eventName);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This will be executed when the templates initialize.\r\n     */\r\n    protected _onTemplatesLoaded() {\r\n        this.showLoadingScreen();\r\n\r\n        // navbar\r\n        this._initNavbar();\r\n\r\n        // close overlay button\r\n        let template = this.templateManager.getTemplate('overlay');\r\n        if (template) {\r\n\r\n            let closeButton = template.parent.querySelector('.close-button');\r\n            if (closeButton) {\r\n                closeButton.addEventListener('pointerdown', () => {\r\n                    this.hideOverlayScreen();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.configuration.templates && this.configuration.templates.viewer) {\r\n            if (this.configuration.templates.viewer.params && this.configuration.templates.viewer.params.enableDragAndDrop) {\r\n                this.onSceneInitObservable.addOnce(() => {\r\n                    let filesInput = new FilesInput(this.engine, this.sceneManager.scene, () => {\r\n                    }, () => {\r\n                    }, () => {\r\n                    }, () => {\r\n                    }, function() {\r\n                    }, (file: File) => {\r\n                        this.loadModel(file);\r\n                    }, () => {\r\n                    });\r\n                    filesInput.monitorElementForDragNDrop(this.templateManager.getCanvas()!);\r\n                });\r\n            }\r\n        }\r\n\r\n        return super._onTemplatesLoaded();\r\n    }\r\n\r\n    private _initNavbar() {\r\n        let navbar = this.templateManager.getTemplate('navBar');\r\n        if (navbar) {\r\n            this.onFrameRenderedObservable.add(this._updateProgressBar);\r\n            this.templateManager.eventManager.registerCallback('navBar', this._handlePointerClick, 'click');\r\n            // an example how to trigger the help button. publiclly available\r\n            this.templateManager.eventManager.registerCallback(\"navBar\", () => {\r\n                // do your thing\r\n            }, \"pointerdown\", \".help-button\");\r\n\r\n            this.templateManager.eventManager.registerCallback(\"navBar\", (event: EventCallback) => {\r\n                const evt = event.event;\r\n                const element = <HTMLInputElement>(evt.target);\r\n                if (!this._currentAnimation) { return; }\r\n                const gotoFrame = +element.value / 100 * this._currentAnimation.frames;\r\n                if (isNaN(gotoFrame)) { return; }\r\n                this._currentAnimation.goToFrame(gotoFrame);\r\n            }, \"input\");\r\n\r\n            this.templateManager.eventManager.registerCallback(\"navBar\", () => {\r\n                if (this._resumePlay) {\r\n                    this._togglePlayPause(true);\r\n                }\r\n                this._resumePlay = false;\r\n            }, \"pointerup\", \".progress-wrapper\");\r\n\r\n            if (window.devicePixelRatio === 1 && navbar.configuration.params && !navbar.configuration.params.hideHdButton) {\r\n                navbar.updateParams({\r\n                    hideHdButton: true\r\n                });\r\n            }\r\n\r\n            this.registerTemplatePlugin(new HDButtonPlugin(this));\r\n            this.registerTemplatePlugin(new PrintButtonPlugin(this));\r\n        }\r\n    }\r\n\r\n    private _animationList: string[];\r\n    private _currentAnimation: IModelAnimation;\r\n    private _isAnimationPaused: boolean;\r\n    private _resumePlay: boolean;\r\n\r\n    private _handlePointerClick = (event: EventCallback) => {\r\n\r\n        let pointerDown = <PointerEvent>event.event;\r\n        if (pointerDown.button !== 0) { return; }\r\n        var element = (<HTMLElement>event.event.target);\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        let parentClasses = element.parentElement!.classList;\r\n\r\n        let elementClasses = element.classList;\r\n\r\n        let elementName = \"\";\r\n\r\n        for (let i = 0; i < elementClasses.length; ++i) {\r\n            let className = elementClasses[i];\r\n            if (className.indexOf(\"-button\") !== -1 || className.indexOf(\"-wrapper\") !== -1) {\r\n                elementName = className;\r\n                break;\r\n            }\r\n        }\r\n\r\n        switch (elementName) {\r\n            case \"speed-button\":\r\n            case \"types-button\":\r\n                if (parentClasses.contains(\"open\")) {\r\n                    parentClasses.remove(\"open\");\r\n                } else {\r\n                    parentClasses.add(\"open\");\r\n                }\r\n                break;\r\n            case \"play-pause-button\":\r\n                this._togglePlayPause();\r\n                break;\r\n            case \"label-option-button\":\r\n                var value = element.dataset[\"value\"];\r\n                var label = element.querySelector(\"span.animation-label\");\r\n                if (label && value) {\r\n                    this._updateAnimationType({ value: value.trim(), label: label.innerHTML });\r\n                }\r\n                break;\r\n            case \"speed-option-button\":\r\n                if (!this._currentAnimation) {\r\n                    return;\r\n                }\r\n                var speed = element.dataset[\"value\"];\r\n                if (speed) {\r\n                    this._updateAnimationSpeed(speed);\r\n                }\r\n                break;\r\n            case \"progress-wrapper\":\r\n                this._resumePlay = !this._isAnimationPaused;\r\n                if (this._resumePlay) {\r\n                    this._togglePlayPause(true);\r\n                }\r\n                break;\r\n            case \"fullscreen-button\":\r\n                this.toggleFullscreen();\r\n                break;\r\n            case \"vr-button\":\r\n                this.toggleVR();\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Plays or Pauses animation\r\n     */\r\n    private _togglePlayPause = (noUiUpdate?: boolean) => {\r\n        if (!this._currentAnimation) {\r\n            return;\r\n        }\r\n        if (this._isAnimationPaused) {\r\n            this._currentAnimation.restart();\r\n        } else {\r\n            this._currentAnimation.pause();\r\n        }\r\n\r\n        this._isAnimationPaused = !this._isAnimationPaused;\r\n\r\n        if (noUiUpdate) { return; }\r\n\r\n        let navbar = this.templateManager.getTemplate('navBar');\r\n        if (!navbar) { return; }\r\n\r\n        navbar.updateParams({\r\n            paused: this._isAnimationPaused,\r\n        });\r\n    }\r\n\r\n    private _oldIdleRotationValue: number;\r\n\r\n    /**\r\n     * Control progress bar position based on animation current frame\r\n     */\r\n    private _updateProgressBar = () => {\r\n        let navbar = this.templateManager.getTemplate('navBar');\r\n        if (!navbar) { return; }\r\n        var progressSlider = <HTMLInputElement>navbar.parent.querySelector(\"input.progress-wrapper\");\r\n        if (progressSlider && this._currentAnimation) {\r\n            const progress = this._currentAnimation.currentFrame / this._currentAnimation.frames * 100;\r\n            var currentValue = progressSlider.valueAsNumber;\r\n            if (Math.abs(currentValue - progress) > 0.5) { // Only move if greater than a 1% change\r\n                progressSlider.value = '' + progress;\r\n            }\r\n\r\n            if (this._currentAnimation.state === AnimationState.PLAYING) {\r\n                if (this.sceneManager.camera.autoRotationBehavior && !this._oldIdleRotationValue) {\r\n                    this._oldIdleRotationValue = this.sceneManager.camera.autoRotationBehavior.idleRotationSpeed;\r\n                    this.sceneManager.camera.autoRotationBehavior.idleRotationSpeed = 0;\r\n                }\r\n            } else {\r\n                if (this.sceneManager.camera.autoRotationBehavior && this._oldIdleRotationValue) {\r\n                    this.sceneManager.camera.autoRotationBehavior.idleRotationSpeed = this._oldIdleRotationValue;\r\n                    this._oldIdleRotationValue = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update Current Animation Speed\r\n     */\r\n    private _updateAnimationSpeed = (speed: string, paramsObject?: any) => {\r\n        let navbar = this.templateManager.getTemplate('navBar');\r\n        if (!navbar) { return; }\r\n\r\n        if (speed && this._currentAnimation) {\r\n            this._currentAnimation.speedRatio = parseFloat(speed);\r\n            if (!this._isAnimationPaused) {\r\n                this._currentAnimation.restart();\r\n            }\r\n\r\n            if (paramsObject) {\r\n                paramsObject.selectedSpeed = speed + \"x\";\r\n            } else {\r\n                navbar.updateParams({\r\n                    selectedSpeed: speed + \"x\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update Current Animation Type\r\n     */\r\n    private _updateAnimationType = (data: { label: string, value: string }, paramsObject?: any) => {\r\n        let navbar = this.templateManager.getTemplate('navBar');\r\n        if (!navbar) { return; }\r\n\r\n        if (data) {\r\n            this._currentAnimation = this.sceneManager.models[0].setCurrentAnimationByName(data.value);\r\n        }\r\n\r\n        if (paramsObject) {\r\n            paramsObject.selectedAnimation = (this._animationList.indexOf(data.value) + 1);\r\n            paramsObject.selectedAnimationName = data.label;\r\n        } else {\r\n            navbar.updateParams({\r\n                selectedAnimation: (this._animationList.indexOf(data.value) + 1),\r\n                selectedAnimationName: data.label\r\n            });\r\n        }\r\n\r\n        this._updateAnimationSpeed(\"1.0\", paramsObject);\r\n    }\r\n\r\n    protected _initVR() {\r\n        this.engine.onVRDisplayChangedObservable.add(() => {\r\n            let viewerTemplate = this.templateManager.getTemplate('viewer');\r\n            let viewerElement = viewerTemplate && viewerTemplate.parent;\r\n\r\n            if (viewerElement) {\r\n                if (this.sceneManager.vrHelper!.isInVRMode) {\r\n                    viewerElement.classList.add(\"in-vr\");\r\n                } else {\r\n                    viewerElement.classList.remove(\"in-vr\");\r\n                }\r\n            }\r\n        });\r\n        if (this.sceneManager.vrHelper) {\r\n            // due to the way the experience helper is exisintg VR, this must be added.\r\n            this.sceneManager.vrHelper.onExitingVR.add(() => {\r\n                let viewerTemplate = this.templateManager.getTemplate('viewer');\r\n                let viewerElement = viewerTemplate && viewerTemplate.parent;\r\n\r\n                if (viewerElement) {\r\n                    viewerElement.classList.remove(\"in-vr\");\r\n                }\r\n            });\r\n        }\r\n        super._initVR();\r\n    }\r\n\r\n    /**\r\n     * Toggle fullscreen of the entire viewer\r\n     */\r\n    public toggleFullscreen = () => {\r\n        let viewerTemplate = this.templateManager.getTemplate('viewer');\r\n        let viewerElement = viewerTemplate && viewerTemplate.parent;\r\n        let fullscreenElement = this.fullscreenElement || viewerElement;\r\n\r\n        if (fullscreenElement) {\r\n            let currentElement = (<any>document).fullscreenElement || (<any>document).webkitFullscreenElement || (<any>document).mozFullScreenElement || (<any>document).msFullscreenElement;\r\n            if (!currentElement) {\r\n                let requestFullScreen = fullscreenElement.requestFullscreen || (<any>fullscreenElement).webkitRequestFullscreen || (<any>fullscreenElement).msRequestFullscreen || (<any>fullscreenElement).mozRequestFullScreen;\r\n                requestFullScreen.call(fullscreenElement);\r\n                if (viewerElement) {\r\n                    viewerElement.classList.add(\"in-fullscreen\");\r\n                }\r\n            } else {\r\n                let exitFullscreen = document.exitFullscreen || (<any>document).webkitExitFullscreen || (<any>document).msExitFullscreen || (<any>document).mozCancelFullScreen;\r\n                exitFullscreen.call(document);\r\n                if (viewerElement) {\r\n                    viewerElement.classList.remove(\"in-fullscreen\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Preparing the container element to present the viewer\r\n     */\r\n    protected _prepareContainerElement() {\r\n        const htmlElement = this.containerElement as HTMLElement;\r\n        if (htmlElement.style) {\r\n            htmlElement.style.position = 'relative';\r\n            htmlElement.style.height = '100%';\r\n            htmlElement.style.display = 'flex';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function will configure the templates and update them after a model was loaded\r\n     * It is mainly responsible to changing the title and subtitle etc'.\r\n     * @param model the model to be used to configure the templates by\r\n     */\r\n    protected _configureTemplate(model?: ViewerModel) {\r\n        let navbar = this.templateManager.getTemplate('navBar');\r\n        if (!navbar) { return; }\r\n\r\n        let newParams: any = navbar.configuration.params || {};\r\n\r\n        if (!model) {\r\n            newParams.animations = null;\r\n        } else {\r\n\r\n            let animationNames = model.getAnimationNames();\r\n            newParams.animations = animationNames.map((a) => { return { label: a, value: a }; });\r\n            if (animationNames.length) {\r\n                this._isAnimationPaused = (model.configuration.animation && !model.configuration.animation.autoStart) || !model.configuration.animation;\r\n                this._animationList = animationNames;\r\n                newParams.paused = this._isAnimationPaused;\r\n                let animationIndex = 0;\r\n                if (model.configuration.animation && typeof model.configuration.animation.autoStart === 'string') {\r\n                    animationIndex = animationNames.indexOf(model.configuration.animation.autoStart);\r\n                    if (animationIndex === -1) {\r\n                        animationIndex = 0;\r\n                    }\r\n                }\r\n                this._updateAnimationType(newParams.animations[animationIndex], newParams);\r\n            } else {\r\n                newParams.animations = null;\r\n            }\r\n\r\n            if (model.configuration.thumbnail) {\r\n                newParams.logoImage = model.configuration.thumbnail;\r\n            }\r\n        }\r\n        navbar.updateParams(newParams, false);\r\n    }\r\n\r\n    /**\r\n     * This will load a new model to the default viewer\r\n     * overriding the AbstractViewer's loadModel.\r\n     * The scene will automatically be cleared of the old models, if exist.\r\n     * @param model the configuration object (or URL) to load.\r\n     */\r\n    public loadModel(model?: string | File | IModelConfiguration): Promise<ViewerModel> {\r\n        if (!model) {\r\n            model = this.configuration.model;\r\n        }\r\n        this.showLoadingScreen();\r\n        return super.loadModel(model!, true).catch((error) => {\r\n            console.log(error);\r\n            this.hideLoadingScreen();\r\n            this.showOverlayScreen('error');\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n\r\n    private _onModelLoaded = (model: ViewerModel) => {\r\n        this._configureTemplate(model);\r\n        // with a short timeout, making sure everything is there already.\r\n        let hideLoadingDelay = 20;\r\n        if (this.configuration.lab && this.configuration.lab.hideLoadingDelay !== undefined) {\r\n            hideLoadingDelay = this.configuration.lab.hideLoadingDelay;\r\n        }\r\n        setTimeout(() => {\r\n            this.sceneManager.scene.executeWhenReady(() => {\r\n                this.hideLoadingScreen();\r\n            });\r\n        }, hideLoadingDelay);\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Show the overlay and the defined sub-screen.\r\n     * Mainly used for help and errors\r\n     * @param subScreen the name of the subScreen. Those can be defined in the configuration object\r\n     */\r\n    public showOverlayScreen(subScreen: string) {\r\n        let template = this.templateManager.getTemplate('overlay');\r\n        if (!template) { return Promise.resolve('Overlay template not found'); }\r\n\r\n        return template.show(((template) => {\r\n\r\n            var canvasRect = this.containerElement.getBoundingClientRect();\r\n\r\n            template.parent.style.display = 'flex';\r\n            template.parent.style.width = canvasRect.width + \"px\";\r\n            template.parent.style.height = canvasRect.height + \"px\";\r\n            template.parent.style.opacity = \"1\";\r\n\r\n            let subTemplate = this.templateManager.getTemplate(subScreen);\r\n            if (!subTemplate) {\r\n                return Promise.reject(subScreen + ' template not found');\r\n            }\r\n            return subTemplate.show(((template) => {\r\n                template.parent.style.display = 'flex';\r\n                return Promise.resolve(template);\r\n            }));\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Hide the overlay screen.\r\n     */\r\n    public hideOverlayScreen() {\r\n        let template = this.templateManager.getTemplate('overlay');\r\n        if (!template) { return Promise.resolve('Overlay template not found'); }\r\n\r\n        return template.hide(((template) => {\r\n            template.parent.style.opacity = \"0\";\r\n            let onTransitionEnd = () => {\r\n                template.parent.removeEventListener(\"transitionend\", onTransitionEnd);\r\n                template.parent.style.display = 'none';\r\n            };\r\n            template.parent.addEventListener(\"transitionend\", onTransitionEnd);\r\n\r\n            let overlays = template.parent.querySelectorAll('.overlay');\r\n            if (overlays) {\r\n                for (let i = 0; i < overlays.length; ++i) {\r\n                    let htmlElement = <HTMLElement>overlays.item(i);\r\n                    htmlElement.style.display = 'none';\r\n                }\r\n            }\r\n            return Promise.resolve(template);\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * show the viewer (in case it was hidden)\r\n     *\r\n     * @param visibilityFunction an optional function to execute in order to show the container\r\n     */\r\n    public show(visibilityFunction?: ((template: Template) => Promise<Template>)): Promise<Template> {\r\n        let template = this.templateManager.getTemplate('main');\r\n        //not possible, but yet:\r\n        if (!template) { return Promise.reject('Main template not found'); }\r\n        return template.show(visibilityFunction);\r\n    }\r\n\r\n    /**\r\n     * hide the viewer (in case it is visible)\r\n     *\r\n     * @param visibilityFunction an optional function to execute in order to hide the container\r\n     */\r\n    public hide(visibilityFunction?: ((template: Template) => Promise<Template>)) {\r\n        let template = this.templateManager.getTemplate('main');\r\n        //not possible, but yet:\r\n        if (!template) { return Promise.reject('Main template not found'); }\r\n        return template.hide(visibilityFunction);\r\n    }\r\n\r\n    /**\r\n     * Show the loading screen.\r\n     * The loading screen can be configured using the configuration object\r\n     */\r\n    public showLoadingScreen() {\r\n        let template = this.templateManager.getTemplate('loadingScreen');\r\n        if (!template) { return Promise.resolve('Loading Screen template not found'); }\r\n\r\n        return template.show(((template) => {\r\n\r\n            var canvasRect = this.containerElement.getBoundingClientRect();\r\n            // var canvasPositioning = window.getComputedStyle(this.containerElement).position;\r\n\r\n            template.parent.style.display = 'flex';\r\n            template.parent.style.width = canvasRect.width + \"px\";\r\n            template.parent.style.height = canvasRect.height + \"px\";\r\n            template.parent.style.opacity = \"1\";\r\n            // from the configuration!!!\r\n            let color = \"black\";\r\n            if (this.configuration.templates && this.configuration.templates.loadingScreen) {\r\n                color = (this.configuration.templates.loadingScreen.params &&\r\n                    <string>this.configuration.templates.loadingScreen.params.backgroundColor) || color;\r\n            }\r\n            template.parent.style.backgroundColor = color;\r\n            return Promise.resolve(template);\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Hide the loading screen\r\n     */\r\n    public hideLoadingScreen() {\r\n        let template = this.templateManager.getTemplate('loadingScreen');\r\n        if (!template) { return Promise.resolve('Loading Screen template not found'); }\r\n\r\n        return template.hide(((template) => {\r\n            template.parent.style.opacity = \"0\";\r\n            let onTransitionEnd = () => {\r\n                template.parent.removeEventListener(\"transitionend\", onTransitionEnd);\r\n                template.parent.style.display = 'none';\r\n            };\r\n            template.parent.addEventListener(\"transitionend\", onTransitionEnd);\r\n            return Promise.resolve(template);\r\n        }));\r\n    }\r\n\r\n    public dispose() {\r\n        this.templateManager.dispose();\r\n        super.dispose();\r\n    }\r\n\r\n    protected _onConfigurationLoaded(configuration: ViewerConfiguration) {\r\n\r\n        super._onConfigurationLoaded(configuration);\r\n\r\n        this.templateManager = new TemplateManager(this.containerElement);\r\n\r\n        // initialize the templates\r\n        let templateConfiguration = this.configuration.templates || {};\r\n\r\n        this.templateManager.initTemplate(templateConfiguration);\r\n        // when done, execute onTemplatesLoaded()\r\n        this.templateManager.onAllLoaded.add(() => {\r\n            let canvas = this.templateManager.getCanvas();\r\n            if (canvas) {\r\n                this._canvas = canvas;\r\n            }\r\n            this._onTemplateLoaded();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * An extension of the light configuration of the abstract viewer.\r\n     * @param lightsConfiguration the light configuration to use\r\n     * @param model the model that will be used to configure the lights (if the lights are model-dependant)\r\n     */\r\n    private _configureLights() {\r\n        // labs feature - flashlight\r\n        if (this.configuration.lab && this.configuration.lab.flashlight) {\r\n            let lightTarget;\r\n            let angle = 0.5;\r\n            let exponent = Math.PI / 2;\r\n            if (typeof this.configuration.lab.flashlight === \"object\") {\r\n                exponent = this.configuration.lab.flashlight.exponent || exponent;\r\n                angle = this.configuration.lab.flashlight.angle || angle;\r\n            }\r\n            var flashlight = new SpotLight(\"flashlight\", Vector3.Zero(),\r\n                Vector3.Zero(), exponent, angle, this.sceneManager.scene);\r\n            if (typeof this.configuration.lab.flashlight === \"object\") {\r\n                flashlight.intensity = this.configuration.lab.flashlight.intensity || flashlight.intensity;\r\n                if (this.configuration.lab.flashlight.diffuse) {\r\n                    flashlight.diffuse.r = this.configuration.lab.flashlight.diffuse.r;\r\n                    flashlight.diffuse.g = this.configuration.lab.flashlight.diffuse.g;\r\n                    flashlight.diffuse.b = this.configuration.lab.flashlight.diffuse.b;\r\n                }\r\n                if (this.configuration.lab.flashlight.specular) {\r\n                    flashlight.specular.r = this.configuration.lab.flashlight.specular.r;\r\n                    flashlight.specular.g = this.configuration.lab.flashlight.specular.g;\r\n                    flashlight.specular.b = this.configuration.lab.flashlight.specular.b;\r\n                }\r\n\r\n            }\r\n            this.sceneManager.scene.constantlyUpdateMeshUnderPointer = true;\r\n            this.sceneManager.scene.onPointerObservable.add((eventData) => {\r\n                if (eventData.type === 4 && eventData.pickInfo) {\r\n                    lightTarget = (eventData.pickInfo.pickedPoint);\r\n                } else {\r\n                    lightTarget = undefined;\r\n                }\r\n            });\r\n            let updateFlashlightFunction = () => {\r\n                if (this.sceneManager.camera && flashlight) {\r\n                    flashlight.position.copyFrom(this.sceneManager.camera.position);\r\n                    if (lightTarget) {\r\n                        lightTarget.subtractToRef(flashlight.position, flashlight.direction);\r\n                    }\r\n                }\r\n            };\r\n            this.sceneManager.scene.registerBeforeRender(updateFlashlightFunction);\r\n            this._registeredOnBeforeRenderFunctions.push(updateFlashlightFunction);\r\n        }\r\n    }\r\n}"]}