import { telemetryManager } from "../../managers/telemetryManager";
import { PrecisionDate } from "@babylonjs/core/Misc/precisionDate";
var TelemetryLoaderPlugin = /** @class */ (function () {
    function TelemetryLoaderPlugin() {
    }
    TelemetryLoaderPlugin.prototype.onInit = function (loader, model) {
        this._model = model;
        this._loadStart = PrecisionDate.Now;
    };
    TelemetryLoaderPlugin.prototype.onLoaded = function (model) {
        telemetryManager.broadcast("Model Loaded", model.getViewerId(), {
            model: model,
            loadTime: PrecisionDate.Now - this._loadStart
        });
        telemetryManager.flushWebGLErrors(model.rootMesh.getEngine(), model.getViewerId());
    };
    TelemetryLoaderPlugin.prototype.onError = function (message, exception) {
        this._loadEnd = PrecisionDate.Now;
        telemetryManager.broadcast("Load Error", this._model.getViewerId(), {
            model: this._model,
            loadTime: this._loadEnd - this._loadStart
        });
        telemetryManager.flushWebGLErrors(this._model.rootMesh.getEngine(), this._model.getViewerId());
    };
    TelemetryLoaderPlugin.prototype.onComplete = function () {
        this._loadEnd = PrecisionDate.Now;
        telemetryManager.broadcast("Load Complete", this._model.getViewerId(), {
            model: this._model,
            loadTime: this._loadEnd - this._loadStart
        });
        telemetryManager.flushWebGLErrors(this._model.rootMesh.getEngine(), this._model.getViewerId());
    };
    return TelemetryLoaderPlugin;
}());
export { TelemetryLoaderPlugin };
//# sourceMappingURL=telemetryLoaderPlugin.js.map