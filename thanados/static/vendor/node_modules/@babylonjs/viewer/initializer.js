import { DefaultViewer } from './viewer/defaultViewer';
import { mapperManager } from './configuration/mappers';
import { viewerGlobals } from './configuration/globals';
/**
 * Will attach an init function the the DOMContentLoaded event.
 * The init function will be removed automatically after the event was triggered.
 */
export function initListeners() {
    document.addEventListener("DOMContentLoaded", init);
    function init(event) {
        document.removeEventListener("DOMContentLoaded", init);
        if (viewerGlobals.disableInit) {
            return;
        }
        InitTags();
    }
}
/**
 * Select all HTML tags on the page that match the selector and initialize a viewer
 *
 * @param selector the selector to initialize the viewer on (default is 'babylon')
 */
export function InitTags(selector) {
    if (selector === void 0) { selector = 'babylon'; }
    var elements = document.querySelectorAll(selector);
    for (var i = 0; i < elements.length; ++i) {
        var element = elements.item(i);
        // get the html configuration
        var configMapper = mapperManager.getMapper('dom');
        var config = configMapper.map(element);
        var viewer = new DefaultViewer(element, config);
    }
}
//# sourceMappingURL=initializer.js.map